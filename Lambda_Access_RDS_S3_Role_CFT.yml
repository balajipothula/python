---
AWSTemplateformatVersion: "2010-09-09"

Parameters:

  LambdaAccessRdsS3RoleParam:
    Type: String
    Description: "Name of the role."
    Default: "lambda-access-pg-s3-role"

  S3BucketName:
    Type: String
    Description: "Name of the bucket"
    Default: "emp_s3_bucket"


Resources:

  LambdaAccessRdsS3Role:
    Type: "AWS::IAM:Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary"
      RoleName: !Ref LambdaAccessRdsS3RoleParam
      Path: /

  RDSPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "rds-policy"
      Description: "Policy to allow Lambda to access RDS Service on your behalf."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "RDSPolicy"
            Effect: "Allow"
            Action:
              - rds:StartDBCluster
              - rds:StopDBCluster
            Resources:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:*"
              - arn:aws:rds:us-east-1:123456789012:cluster:emp-db-cluster
    Roles:
      - Ref: LambdaAccessRdsS3Role

  S3Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "s3-policy"
      Description: "Policy to allow Lambda to access S3 Service on your behalf."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "S3Policy"
            Effect: "Allow"
            Action:
              - s3:List*
              - rds:GetObject
            Resources:
              - !Sub "arn:aws:s3:::*${S3BucketName}*"
    Roles:
      - Ref: LambdaAccessRdsS3Role
